@page "/EnVracList"

@using VTools.Models.EnVrac
@using VTools.Services.EnVrac

@inject IEnVracService EnVracService;
@inject IArticleService ArticleService;

@attribute [StreamRendering]
@rendermode InteractiveServer

<h3>EnVrac</h3>

<table class="table">
    <thead>
    <tr>
        <th>Titre</th>
        <th>Description</th>
        <th>Nombre d'articles</th>
        <th>Créé le</th>
        <th>Publier le</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var loan in _items)
    {
        <tr>
            <td>@loan.Title</td>
            <td>@loan.Description</td>
            <td>@loan.Articles.Count</td>
            <td>@loan.CreatedAt</td>
            <td>@loan.PublishAt</td>
        </tr>
    }
    </tbody>
</table>
------------

<table class="table">
    <thead>
    <tr>
        <th>Titre</th>
        <th>Catégorie</th>
        <th>Urls</th>
        <th>Publier le</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var article in _articles)
    {
        <tr>
            <td>@article.Title</td>
            <td>@article.Category.ToString()</td>
            <td>@article.Urls.Count</td>
            <td>@article.CreatedAt</td>
            <td>
                <button type="button" class="btn btn-outline-primary" @onclick="@(() => SelectArticle(article.Id))">
                    Select
                </button>
            </td>
        </tr>
    }
    </tbody>
</table>
<button class="btn btn-outline-success" type="button" id="button-addon2" @onclick="@(() => NewArticle())">
    <i class="bi bi-plus"></i>New Article
</button>
-----
@if (_articleSelected != null || _isNewArticle)
{
    <h2>Article</h2>
    <input type="text" class="form-control" placeholder="Titre" aria-label="Titre" aria-describedby="Title"
           @bind="@_articleSelectedTitle">
    <textarea id="w3review" name="w3review" rows="4" cols="50" class="form-control" placeholder="Description"
              aria-label="Description" aria-describedby="button-addon2" @bind="@_articleSelectedDescription">
    </textarea>
    <select class="form-select" aria-label="Select a category" @bind="_articleSelectedCategory">
        <option value="">Sélectionner une catégorie</option>
        <option value="@Category.Article">@Category.Article.ToString()</option>
        <option value="@Category.Livre">@Category.Livre.ToString()</option>
        <option value="@Category.Podcast">@Category.Podcast.ToString()</option>
        <option value="@Category.Tools">@Category.Tools.ToString()</option>
        <option value="@Category.Youtube">@Category.Youtube.ToString()</option>
    </select>
    <h4>Urls</h4>
    <ul>
        @if (_articleSelected is not null)
        {
            @foreach (var url in _urls)
            {
                <li>
                    @url
                    <button type="button" class="btn btn-outline-warning" @onclick="@(() => DeleteUrl(url))">
                        Delete Url
                    </button>
                </li>
            }
        }
        <li>
            <input type="text" class="form-control" placeholder="Url" aria-label="Url" aria-describedby="NewUrl"
                   @bind="@_newUrl">
            <button type="button" class="btn btn-outline-success" @onclick="@(() => AddNewUrl())">
                Add New Url
            </button>
        </li>
    </ul>

    @if (_isNewArticle)
    {
        <button class="btn btn-outline-success" type="button" id="button-addon2" @onclick="@(() => SaveNewArticle())">
            <i class="bi bi-plus"></i> Save New Article
        </button>
    }
    @if(!_isNewArticle)
    {
        <button class="btn btn-outline-primary" type="button" id="button-addon2" @onclick="@(() => SaveArticle())">
            <i class="bi bi-plus"></i> Save Article
        </button>
    }
}

@code {
    private List<EnVracItem> _items = [];
    private List<Article> _articles = [];
    private Article? _articleSelected;
    private string? _articleSelectedTitle;
    private string? _articleSelectedDescription;
    private Category? _articleSelectedCategory;
    private string _newUrl = string.Empty;
    private List<string> _urls = [];
    private bool _isNewArticle;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _items = EnVracService.GetEnVracItems();
        _articles = ArticleService.GetArticles();
    }

    private void SelectArticle(Guid articleId)
    {
        _articleSelected = _articles.Find(a => a.Id == articleId);
        if (_articleSelected is not null)
        {
            _articleSelectedTitle = _articleSelected.Title;
            _articleSelectedDescription = _articleSelected.Description;
            _articleSelectedCategory = _articleSelected.Category;
            _urls = _articleSelected.Urls;
        }
    }

    private void NewArticle()
    {
        _articleSelected = null;
        _articleSelectedTitle = string.Empty;
        _articleSelectedDescription = string.Empty;
        _articleSelectedCategory = null;

        _isNewArticle = true;
    }

    private void SaveNewArticle()
    {
        if (string.IsNullOrWhiteSpace(_articleSelectedTitle) || _articleSelectedCategory is null)
        {
            return;
        }

        var newArticle = Article.Create(
            _articleSelectedTitle ?? string.Empty,
            _articleSelectedDescription ?? string.Empty,
            _urls,
            _articleSelectedCategory ?? Category.Article);

        _articles.Add(newArticle);

        _articleSelected = newArticle;

        _isNewArticle = false;
    }

    private void SaveArticle()
    {
        if (string.IsNullOrWhiteSpace(_articleSelectedTitle) || _articleSelectedCategory is null)
        {
            return;
        }

        _articleSelected?.Update(_articleSelectedTitle, _articleSelectedDescription, _urls, _articleSelectedCategory);
    }

    private void AddNewUrl()
    {
        // _articleSelected?.AddNewUrl(_newUrl);
        _urls.Add(_newUrl);
        _newUrl = string.Empty;
    }

    private void DeleteUrl(string url)
    {
        _articleSelected?.DeleteNewUrl(url);
    }
}