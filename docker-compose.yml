services:
  db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: vTools
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d vTools"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - vtools-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  dbmigration:
    image: dbmigration:latest
    build:
      context: .
      dockerfile: DbMigration/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      ConnectionStrings__DefaultConnection: "User ID=${DB_USER};Password=${DB_PASSWORD};Server=db;Port=5432;Database=vTools;Pooling=true;"
    networks:
      - vtools-network
    restart: on-failure

  vtools:
    image: vtools:latest
    build:
      context: .
      dockerfile: VTools/Dockerfile
    ports:
      - 7850:8080
    depends_on:
      db:
        condition: service_healthy
      dbmigration:
        condition: service_completed_successfully
    environment:
      ConnectionStrings__DefaultConnection: "User ID=${DB_USER};Password=${DB_PASSWORD};Server=db;Port=5432;Database=vTools;Pooling=true;"
      ASPNETCORE_URLS: "http://+:8080"
      ASPNETCORE_ENVIRONMENT: "Production"
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
    networks:
      - vtools-network
    restart: unless-stopped

networks:
  vtools-network:
    driver: bridge

volumes:
  postgres-data:
